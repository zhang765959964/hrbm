<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
         http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName" default-lazy-init="false">

	<!-- spring上下文,可以获取 上下文的Context -->
	<bean id="appUtil" class="com.xunfeng.core.util.AppUtil" />
	<!-- 回滚事务类 -->
	<bean id="rollbackJdbcTemplate" class="com.xunfeng.core.db.RollbackJdbcTemplate"></bean>
	<!-- <bean id="dynamicLoadBean" class="com.xunfeng.core.util.DynamicLoadBean" 
		/> -->
	<!-- 资源文件操作类 -->
	<bean id="resourceUtil" class="com.xunfeng.core.util.ResourceUtil" />
	<!-- 缓存操作类，如果需要修改缓存的实现，修改实现的class就可以了，id不要修改。 -->
	<bean id="iCache" class="com.xunfeng.core.cache.impl.MemoryCache"></bean>

	<bean id="confValidator"
		class="org.springmodules.validation.commons.ConfigurableBeanValidator">
		<property name="validatorFactory" ref="validatorFactory" />
	</bean>
	<bean id="validatorFactory"
		class="org.springmodules.validation.commons.DefaultValidatorFactory">
		<property name="validationConfigLocations">
			<list>
				<value>classpath*:/conf/valid/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- <bean id="iCache" class="com.xunfeng.core.cache.impl.MemcachedCache" 
		> <property name="memcachedClient" ref="memcachedClient"></property> </bean> 
		<bean name="memcachedClient" class="net.rubyeye.xmemcached.utils.XMemcachedClientFactoryBean" 
		destroy-method="shutdown"> <property name="servers" value="localhost:12345"></property> 
		</bean> -->


	<!--流程图颜色配置 -->
<!-- 	<bean id="iFlowStatus" class="com.xunfeng.platform.service.bpm.impl.FlowStatus"> -->
<!-- 		<property name="bpmProStatus" ref="bpmProStatusDao"></property> -->
<!-- 		<property name="statusColor" ref="statusColorMap"></property> -->
<!-- 	</bean> -->
	<!-- 状态说明：-1:正在审批，0：弃权,1:同意,2:反对,3:驳回,4,追回,5:会签通过,6:会签不通过 14,终止,33.提交,34,重新提交,37.执行过(脚本使用) 
		用户可以修改状态对应的颜色值，修改图片的颜色。 -->
	<bean id="statusColorMap" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="1" value="#00FF00"></entry>
				<entry key="0" value="#FFA500"></entry>
				<entry key="-1" value="#FF0000"></entry>
				<entry key="2" value="#0000FF"></entry>
				<entry key="3" value="#8A0902"></entry>
				<entry key="4" value="#023B62"></entry>
				<entry key="5" value="#338848"></entry>
				<entry key="6" value="#82B7D7"></entry>
				<entry key="14" value="#EEAF97"></entry>
				<entry key="33" value="#F89800"></entry>
				<entry key="34" value="#FFE76E"></entry>
				<entry key="37" value="#C33A1F"></entry>
			</map>
		</constructor-arg>
	</bean>



	<!-- 会签定义完成条件类 -->
<!-- 	<bean id="signComplete" class="com.xunfeng.platform.service.bpm.impl.SignComplete"></bean> -->
	<!-- 脚本引擎 -->
	<bean id="scriptEngine" class="com.xunfeng.core.engine.GroovyScriptEngine"></bean>
	<!-- 暴露给脚本引擎的代码，凡实现了IScript接口的类都被注入到groovy引擎使用 -->
<!-- 	<bean id="scriptImpl" class="com.xunfeng.platform.service.bpm.impl.ScriptImpl"></bean> -->
	<!-- 基础通用脚本方法 -->
	<bean id="cs" class="com.xunfeng.core.script.CommonScript"></bean>
	<!-- 定时器服务类 -->
	<!--<bean id="schedulerService" class="com.xunfeng.core.scheduler.SchedulerService"></bean>-->

	<!-- 表创建器 -->
<!-- 	<bean id="tableOperator" class="com.xunfeng.core.table.TableOperatorFactoryBean"> -->
<!-- 		<property name="dbType" value="${jdbc.dbType}" /> -->
<!-- 		<property name="jdbcTemplate" ref="jdbcTemplate" /> -->
<!-- 		<property name="dialect" ref="dialect"></property> -->
<!-- 	</bean> -->
	<!-- 表元数据操作类 BpmIndexRebuildController 中使用到。 -->
<!-- 	<bean id="tableMeta" class="com.xunfeng.core.table.TableMetaFactoryBean"> -->
		<!-- <property name="sysDataSource" ref="sysdatasource"></property> -->
<!-- 	</bean> -->
<!--
	<bean id="sysdatasource" class="com.xunfeng.platform.model.system.SysDataSource">
		<property name="alias" value="system-datasource"></property>
		<property name="driverName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="userName" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="dbType" value="${jdbc.dbType}"></property>
	</bean>
	 方言 -->
<!-- 	<bean id="dialect" class="com.xunfeng.core.table.DialectFactoryBean"> -->
<!-- 		<property name="dbType" value="${jdbc.dbType}" /> -->
<!-- 	</bean> -->
	<!-- jdbcDao 实现了分页查询。 -->
<!-- 	<bean id="jdbcDao" class="com.xunfeng.core.db.JdbcDao"> -->
<!-- 		<property name="jdbcTemplate" ref="jdbcTemplate"></property> -->
<!-- 		<property name="dialect" ref="dialect"></property> -->
<!-- 	</bean> -->

	<!-- 工作台类 -->
<!-- 	<bean id="desktopService" class="com.xunfeng.platform.service.system.DesktopService"></bean> -->

	<!-- 邮件/短信发送引擎 -->
<!-- 	<bean id="messageEngine" class="com.xunfeng.core.engine.MessageEngine"> -->
<!-- 		<property name="mailSender" ref="mailSender" /> -->
<!-- 		<property name="fromUser" value="${mail.from}" /> -->
<!-- 	</bean> -->

	<!-- 短信发送 com.xunfeng.core.sms.impl.NoneMessageImpl 可以编写发送短信任何实现方式的demo com.xunfeng.core.sms.impl.ShortMessageImpl 
		网关 com.xunfeng.core.sms.impl.ModemMessage 短信猫 -->
	<bean id="emailHelper" class="com.xunfeng.sys.component.util.EmailHelper" />
</beans>