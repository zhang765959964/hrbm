<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.xunfeng.business.personagency.retired.model.WorkKj">
	<resultMap id="WorkKj" type="com.xunfeng.business.personagency.retired.model.WorkKj">
		<id property="id" column="ID" jdbcType="NUMERIC"/>
		<result property="createTime" column="CREATE_TIME" jdbcType="DATE"/>
		<result property="endTime" column="END_TIME" jdbcType="DATE"/>
		<result property="reason" column="REASON" jdbcType="VARCHAR"/>
		<result property="kjTime" column="KJ_TIME" jdbcType="DATE"/>
		<result property="createrId" column="CREATER_ID" jdbcType="NUMERIC"/>
		<result property="createrName" column="CREATER_NAME" jdbcType="VARCHAR"/>
		<result property="createrDate" column="CREATER_DATE" jdbcType="DATE"/>
		<result property="createrOrgId" column="CREATER_ORG_ID" jdbcType="NUMERIC"/>
		<result property="createrOrgName" column="CREATER_ORG_NAME" jdbcType="VARCHAR"/>
		<result property="retiredDeclareId" column="RETIRED_DECLARE_ID" jdbcType="NUMERIC"/>
		<result property="personId" column="PERSON_ID" jdbcType="NUMERIC"/>
		<result property="kjNum" column="KJ_NUM" jdbcType="NUMERIC"/>
		
	</resultMap>

	<sql id="columns">
		ID,CREATE_TIME,END_TIME,REASON,KJ_TIME,CREATER_ID,CREATER_NAME,CREATER_DATE,CREATER_ORG_ID,CREATER_ORG_NAME,RETIRED_DECLARE_ID,PERSON_ID,KJ_NUM
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(id)"> AND ID  =#{id} </if>
			<if test="@Ognl@isNotEmpty(createTime)"> AND CREATE_TIME  =#{createTime} </if>
			<if test="@Ognl@isNotEmpty(begincreateTime)"> AND CREATE_TIME  >=#{begincreateTime,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endcreateTime)"> AND CREATE_TIME <![CDATA[ <=#{endcreateTime,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(endTime)"> AND END_TIME  =#{endTime} </if>
			<if test="@Ognl@isNotEmpty(beginendTime)"> AND END_TIME  >=#{beginendTime,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endendTime)"> AND END_TIME <![CDATA[ <=#{endendTime,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(reason)"> AND REASON  LIKE #{reason}  </if>
			<if test="@Ognl@isNotEmpty(kjTime)"> AND KJ_TIME  =#{kjTime} </if>
			<if test="@Ognl@isNotEmpty(beginkjTime)"> AND KJ_TIME  >=#{beginkjTime,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endkjTime)"> AND KJ_TIME <![CDATA[ <=#{endkjTime,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(createrId)"> AND CREATER_ID  =#{createrId} </if>
			<if test="@Ognl@isNotEmpty(createrName)"> AND CREATER_NAME  LIKE #{createrName}  </if>
			<if test="@Ognl@isNotEmpty(createrDate)"> AND CREATER_DATE  =#{createrDate} </if>
			<if test="@Ognl@isNotEmpty(begincreaterDate)"> AND CREATER_DATE  >=#{begincreaterDate,jdbcType=DATE} </if>
			<if test="@Ognl@isNotEmpty(endcreaterDate)"> AND CREATER_DATE <![CDATA[ <=#{endcreaterDate,jdbcType=DATE}]]> </if>
			<if test="@Ognl@isNotEmpty(createrOrgId)"> AND CREATER_ORG_ID  =#{createrOrgId} </if>
			<if test="@Ognl@isNotEmpty(createrOrgName)"> AND CREATER_ORG_NAME  LIKE #{createrOrgName}  </if>
			<if test="@Ognl@isNotEmpty(retiredDeclareId)"> AND RETIRED_DECLARE_ID  =#{retiredDeclareId} </if>
			<if test="@Ognl@isNotEmpty(personId)"> AND PERSON_ID  =#{personId} </if>
			<if test="@Ognl@isNotEmpty(kjNum)"> AND  KJ_NUM =#{kjNum} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.xunfeng.business.personagency.retired.model.WorkKj">
		INSERT INTO RSDA_BS_WORK_KJ
		(ID,CREATE_TIME,END_TIME,REASON,KJ_TIME,CREATER_ID,CREATER_NAME,CREATER_DATE,CREATER_ORG_ID,CREATER_ORG_NAME,RETIRED_DECLARE_ID,PERSON_ID,KJ_NUM)
		VALUES
		(#{id,jdbcType=NUMERIC}, #{createTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, #{reason,jdbcType=VARCHAR}, #{kjTime,jdbcType=DATE}, #{createrId,jdbcType=NUMERIC}, #{createrName,jdbcType=VARCHAR}, #{createrDate,jdbcType=DATE}, #{createrOrgId,jdbcType=NUMERIC}, #{createrOrgName,jdbcType=VARCHAR}, #{retiredDeclareId,jdbcType=NUMERIC},#{personId,jdbcType=NUMERIC},#{kjNum,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM RSDA_BS_WORK_KJ 
		WHERE
		ID=#{id}
	</delete>
	
	<!-- 根据人员id删除信息 -->
	<delete id="delByPersonId" parameterType="java.lang.Long">
		DELETE FROM RSDA_BS_WORK_KJ 
		WHERE
		PERSON_ID=#{personId}
	</delete>
	
	
	
	<update id="update" parameterType="com.xunfeng.business.personagency.retired.model.WorkKj">
		UPDATE RSDA_BS_WORK_KJ SET
		CREATE_TIME=#{createTime,jdbcType=DATE},
		END_TIME=#{endTime,jdbcType=DATE},
		REASON=#{reason,jdbcType=VARCHAR},
		KJ_TIME=#{kjTime,jdbcType=DATE},
		CREATER_ID=#{createrId,jdbcType=NUMERIC},
		CREATER_NAME=#{createrName,jdbcType=VARCHAR},
		CREATER_DATE=#{createrDate,jdbcType=DATE},
		CREATER_ORG_ID=#{createrOrgId,jdbcType=NUMERIC},
		CREATER_ORG_NAME=#{createrOrgName,jdbcType=VARCHAR},
		RETIRED_DECLARE_ID=#{retiredDeclareId,jdbcType=NUMERIC},
		PERSON_ID=#{personId,jdbcType=NUMERIC},
		KJ_NUM	=#{kjNum,jdbcType=NUMERIC}
		WHERE
		ID=#{id}
	</update>
		    
	<select id="getById" parameterType="java.lang.Long" resultMap="WorkKj">
		SELECT <include refid="columns"/>
		FROM RSDA_BS_WORK_KJ
		WHERE
		ID=#{id}
	</select>
	
		<!-- 根据退休id查询工作扣减维护情况 -->
	<select id="getRetiredById" resultType="java.util.Map">
			select * from RSDA_BS_WORK_KJ  t 
			where t.retired_declare_id in (select retired.id  from rsda_bs_retired_declare retired) and
			t.retired_declare_id = #{retiredId}
	</select>
	
	
	<!-- 根据退休id查询工作扣减维护情况  -->
	<select id="getWorkKjByRetiredId" resultMap="WorkKj">
		select * from RSDA_BS_WORK_KJ  t  where t.retired_declare_id  = #{retiredId}
	</select>
	
	
	<!-- 根据人员id查询工作扣减情况  -->
	<select id="getByPersonId" resultMap="WorkKj">
		select * from RSDA_BS_WORK_KJ  t  where t.person_id  = #{personId}
	</select>
	
	
	<select id="getAll" resultMap="WorkKj">
		SELECT <include refid="columns"/>
		FROM RSDA_BS_WORK_KJ   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by ID  desc
		</if>
	</select>
</mapper>
